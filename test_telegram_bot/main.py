from locale import currency
import keyboards as kb
import telebot

import requests
import re


# TOKEN
bot = telebot.TeleBot('....')


# –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ' + message.from_user.first_name)

    bot.send_message(message.chat.id, '–ß—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', reply_markup = kb.greetkeyboard())



@bot.message_handler(content_types= ['text'])
def greeting(message):
    if message.text == '‚òÄ–ü–æ–≥–æ–¥–∞':
        setlocation(message)
    elif message.text == 'üßÆ–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä':
        start_calc(message)
    elif message.text == 'üî°–ö–æ–Ω—Å–æ–ª—å–Ω–∞—è –ì—Ä–∞—Ñ–∏–∫–∞':
        magictext(message)
    elif message.text == '$ –ö—É—Ä—Å –í–∞–ª—é—Ç':
        currencyRate(message)
    elif message.text == '–ü–æ–º–æ—â—å':
        help_button(message);


# –ø–æ–≥–æ–¥–∞
url = 'http://api.openweathermap.org/data/2.5/weather'
api_weather = '2167c514c5f8603fab1bf6a82b12f3ab'
api_telegram = '1899126465:AAHo7DyfTZxvM7yuYC2y1RES3K9AA-qwHLo'
@bot.message_handler(commands=['weather'])
def setlocation(message):
    location = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ >>')
    bot.register_next_step_handler(location, outWeatherInfo)

def outWeatherInfo(message):
    city_name = message.text

    try:
        params = {'APPID': api_weather, 'q': city_name, 'units': 'metric', 'lang': 'ru'}
        result = requests.get(url, params=params)
        weather = result.json()



        bot.send_message(message.chat.id, "üå°–í –≥–æ—Ä–æ–¥–µ " + str(weather["name"]) + " —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(
            float(weather["main"]['temp'])) + " ¬∞C\n" +
                         "üìà–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(float(weather['main']['temp_max'])) + " ¬∞C\n" +
                         "üìâ–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(float(weather['main']['temp_min'])) + " ¬∞C\n" +
                         "üí®–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ " + str(float(weather['wind']['speed'])) + " –º/—Å\n" +
                         "üÖøÔ∏è–î–∞–≤–ª–µ–Ω–∏–µ " + str(float(weather['main']['pressure'])) + " –º–±–∞—Ä\n" +
                         "üí¶–í–ª–∞–∂–Ω–æ—Å—Ç—å " + str(int(weather['main']['humidity'])) + " %\n" +
                         "üëÄ–í–∏–¥–∏–º–æ—Å—Ç—å " + str(weather['visibility']) + "\n" +
                         "üìú–û–ø–∏—Å–∞–Ω–∏–µ: " + str(weather['weather'][0]["description"]) + "\n\n", kb.greetkeyboard())


    except:
        bot.send_message(message.chat.id, "–ì–æ—Ä–æ–¥ " + city_name + " –Ω–µ –Ω–∞–π–¥–µ–Ω", kb.greetkeyboard())

# –ø–µ—Ä–µ–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å–Ω—É—é –≥—Ä–∞—Ñ–∏–∫—É
alphabet =      {'–ê' : 0, '–ë' : 1, '–í' : 2, '–ì' : 3, '–î' : 4, '–ï' : 5, '–ñ' : 6, '–ó' : 7, '–ò' : 8, '–ö' : 9,
                 '–õ' : 10, '–ú' : 11, '–ù' : 12, '–û' : 13, '–ü' : 14, '–†' : 15, '–°' : 16, '–¢' : 17, '–£' : 18, '–§' : 19,
                 '–•' : 20, '–¶' : 21, '–ß' : 22, '–®' : 23, '–©' : 24, '–™' : 25, '–´' : 26, '–¨' : 27, '–≠' : 28, '–Æ' : 29,
                 '–Ø' : 30}

# –í–≤–æ–¥ —Å–ª–æ–≤–∞
@bot.message_handler(commands=['magictext'])
def magictext(message):
    getWord = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑—É >> ")
    bot.register_next_step_handler(getWord, outputWord)

def outputWord(message):
    onemsg = []
    word = message.text
    alphabet_sym = open('Alphabet.txt')
    f = alphabet_sym.read()
    list = f.split(',\n')
    for i in range(len(word)):
         if word[i].isalpha():
             if word[i].upper() == '–ô':
                 index = alphabet.get('–ò')
             elif word[i].upper() == '–Å':
                 index = alphabet.get('–ï')
             else:
                index = alphabet.get(word[i].upper())
             onemsg.append(list[index])
         else:
            bot.send_message(message.chat.id, '\n'.join(onemsg), parse_mode='MarkdownV2')
            onemsg.clear()
    bot.send_message(message.chat.id, '\n'.join(onemsg), kb.greetkeyboard(), parse_mode='MarkdownV2')


# –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
def start_calc(message):
    primer = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á—É >>")
    bot.register_next_step_handler(primer, calculator)


def calculator(message):
    s = message.text
    s = re.sub(r"\s*", "", s)
    s1 = ""
    queue = []
    stack = []
    for i in range(0, len(s)):
        if (s[i].isdigit()):
            s1 = str(s1) + str(s[i])
        else:
            if (len(s1) > 0):
                queue.append(s1)
                s1 = ""
            if (len(stack) == 0 or stack[0] == "("):
                stack.insert(0, s[i])
            elif (s[i] in "*/" and stack[0] in "+-"):
                stack.insert(0, s[i])
            elif (s[i] in "+-*/" and stack[0] in "+-*/"):
                if (s[i] in "+-" and stack[0] in "*/+-"):
                    while (len(stack) > 0 and not (stack[0] in "(")):
                        queue.append(stack.pop(0))
                    stack.insert(0, s[i])
                elif (s[i] in "*/" and stack[0] in "*/"):
                    while (len(stack) > 0 and not (stack[0] in "+-(")):
                        queue.append(stack.pop(0))
                    stack.insert(0, s[i])
            elif (s[i] == "("):
                stack.insert(0, "(")
            elif (s[i] == ")"):
                while (len(stack) > 0 and stack[0] != "("):
                    queue.append(stack.pop(0))
                if (len(stack) > 0): stack.pop(0)
    if (len(s1) > 0): queue.append(s1)
    while (len(stack) > 0): queue.append(stack.pop(0))
    stack1 = []
    for i in queue:
        if (i.isdigit()):
            stack1.insert(0, i)
        elif (i in "+-*/"):
            a = int(stack1.pop(0))
            b = int(stack1.pop(0))
            res = 0
            if (i == "+"): res = b + a
            if (i == "-"): res = b - a
            if (i == "*"): res = b * a
            if (i == "/"): res = b / a
            stack1.insert(0, res)
    bot.send_message(message.chat.id, '–û—Ç–≤–µ—Ç:')
    bot.send_message(message.chat.id, str(res), reply_markup=kb.greetkeyboard())

# –ö—É—Ä—Å –≤–∞–ª—é—Ç
def currencyRate(message):
   for exc in load_exchange():
       if ccy_key == exc['ccy']:
           return exc
   return False
# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    while True:
        try:
            bot.polling(none_stop=True)
        except Exception as ex:
            telebot.logger.error(ex)

#–î–æ–¥–µ–ª–∞—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç –∏ —Ñ–æ—Ç–æ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞ —Ñ–æ–Ω–¥–æ–≤–æ–º —Ä—ã–Ω–∫–µ